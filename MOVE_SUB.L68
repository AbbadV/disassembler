00000000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 4/24/2017 1:34:19 PM

00000000                             1  *DECODED
00000000                             2  *SIZE
00000000                             3  *SOURCE Dn
00000000                             4  *ADDRESS Dn
00000000                             5  *
00000000                             6  *-MOVE.B D0,D1
00000000                             7  *
00000000                             8  *------------------------------------------------------------------------------
00000000                             9  
00000000                            10  MOVE_SUB
00000000  48E7 FFFE                 11          MOVEM.L   D0-D7/A0-A6,-(SP) ; move the old registers onto the stack
00000004                            12         
00000004                            13  
00000004                            14          * sets up the data registers
00000004                            15          *
00000004                            16          * A1 - the current opcode's address
00000004                            17          * A3 - the current position of the output
00000004                            18          * A4 - the location of the text for printing
00000004                            19          *
00000004                            20          *
00000004                            21          * D1 - the actual opcode
00000004                            22          *
00000004  227C 00000000             23          MOVEA.L   #0,A1             ; load the current opcode into a register
Line 24 ERROR: Undefined symbol
0000000A  3279 004DBB8E             24          MOVEA.W   IN_CURR_A,A1
00000010                            25          
00000010  3219                      26          MOVE.W    (A1)+,D1          ; ***move A1 to next command or to parameter
00000012                            27  
00000012  267C 00000000             28          MOVEA.L   #0,A3
Line 29 ERROR: Undefined symbol
00000018  3679 004DBB8E             29          MOVEA.W   OUT_CURR_A,A3 ; move the current output pointer to A3
Line 30 ERROR: Undefined symbol
0000001E  49F9 004DBB8E             30          LEA       MOVE_STR,A4     ; move the to-be-printed string to A4
00000024                            31  
00000024                            32          * we need to append the string at ###_STR to the output string
00000024                            33          * we do this char by char (byte by byte) until we see a NULL (0)
00000024                            34          * in ###_STR
00000024                            35  
00000024                            36  MOVE_COPY
00000024  4A14                      37          TST.B     (A4)      ; test the contents of A4
00000026  6700 0006                 38          BEQ       MOVE_DONE  ; if we hit a 00, we're done copying
0000002A                            39  
0000002A  16DC                      40          MOVE.B    (A4)+,(A3)+   ; copy A4 into A3, then increment both
0000002C  60F6                      41          BRA       MOVE_COPY      ; do it again
0000002E                            42          
0000002E                            43  MOVE_DONE
0000002E                            44          
0000002E                            45          *get operation size
0000002E  343C 3000                 46          MOVE.W  #$3000,D2
00000032  C441                      47          AND.W   D1,D2
00000034  B47C 1000                 48          CMP.W   #$1000,D2
00000038  6700 025E                 49          BEQ MOVE_B
0000003C  B47C 3000                 50          CMP.W   #$3000,D2
00000040  6700 0266                 51          BEQ MOVE_W
00000044  B47C 2000                 52          CMP.W   #$2000,D2
00000048  6700 026E                 53          BEQ MOVE_L
0000004C                            54          
0000004C                            55  MOVE_XMODE  ;get source EA
0000004C  343C 0038                 56          MOVE.W  #$38,D2
00000050  C441                      57          AND.W   D1,D2
00000052  E60A                      58          LSR.B   #3,D2
00000054  1E3C 0007                 59          MOVE.B  #$7,D7
00000058  CE01                      60          AND.B   D1,D7
0000005A                            61          
0000005A  B43C 0000                 62          CMP.B   #$0,D2
0000005E  6700 0082                 63          BEQ MOVE_DATA
00000062  B43C 0001                 64          CMP.B   #$1,D2
00000066  6700 0082                 65          BEQ MOVE_ADD
0000006A  B43C 0002                 66          CMP.B   #$2,D2
0000006E  6700 0082                 67          BEQ MOVE_IADD
00000072  B43C 0003                 68          CMP.B   #$3,D2
00000076  6700 0082                 69          BEQ MOVE_ADDP
0000007A  B43C 0004                 70          CMP.B   #$4,D2
0000007E  6700 0082                 71          BEQ MOVE_PADD
00000082  B43C 0007                 72          CMP.B   #$7,D2
00000086  6700 00A2                 73          BEQ MOVE_GETEA
0000008A                            74  
0000008A                            75  
0000008A                            76                
0000008A                            77  MOVE_AMODE
0000008A  16FC 002C                 78          MOVE.B  #',',(A3)+
0000008E                            79                 
0000008E  343C 01C0                 80          MOVE.W  #$1C0,D2
00000092  C441                      81          AND.W   D1,D2
00000094  EC8A                      82          LSR.L   #6,D2
00000096                            83          
00000096  3E3C 0E00                 84          MOVE.W  #$E00,D7
0000009A  CE41                      85          AND.W   D1,D7
0000009C  E04F                      86          LSR.W   #8,D7
0000009E  E24F                      87          LSR.W   #1,D7
000000A0                            88          
000000A0  B43C 0000                 89          CMP.B   #$0,D2
000000A4  6700 0064                 90          BEQ MOVE_ADATA
000000A8  B43C 0002                 91          CMP.B   #$2,D2
000000AC  6700 0064                 92          BEQ MOVE_AIADD
000000B0  B43C 0003                 93          CMP.B   #$3,D2
000000B4  6700 0064                 94          BEQ MOVE_AADDP
000000B8  B43C 0004                 95          CMP.B   #$4,D2
000000BC  6700 0064                 96          BEQ MOVE_APADD
000000C0  B43C 0007                 97          CMP.B   #$7,D2
000000C4  6700 012C                 98          BEQ MOVE_AGETEA
000000C8                            99          
000000C8                           100   
000000C8                           101  
000000C8                           102  MOVE_FIN 
000000C8  16FC 000A                103          MOVE.B  #$A,(A3)+
000000CC  16FC 000D                104          MOVE.B  #$D,(A3)+       
Line 105 ERROR: Undefined symbol
000000D0  33C9 005444A8            105          MOVE.W    A1,IN_CURR_A  ; move the current A1 back to the input pointer
Line 106 ERROR: Undefined symbol
000000D6  33CB 005444A8            106          MOVE.W    A3,OUT_CURR_A ; move the current A3 back to the output pointer
000000DC                           107  
000000DC  4CDF 7FFF                108          MOVEM.L   (SP)+,D0-D7/A0-A6 ; move the old registers back to the stack
000000E0  4E75                     109          RTS       ; return
000000E2                           110  
000000E2                           111  *------------------------------------------------------------------------------
000000E2                           112  MOVE_DATA
000000E2  4EB9 00000246            113      JSR PRINTDN
000000E8  60A0                     114      BRA MOVE_AMODE
000000EA                           115  MOVE_ADD
000000EA  4EB9 00000250            116      JSR PRINTAN
000000F0  6098                     117      BRA MOVE_AMODE
000000F2                           118  MOVE_IADD
000000F2  4EB9 0000025A            119      JSR PRINTIAN
000000F8  6090                     120      BRA MOVE_AMODE
000000FA                           121  MOVE_ADDP
000000FA  4EB9 0000026C            122      JSR PRINTAP
00000100  6088                     123      BRA MOVE_AMODE
00000102                           124  MOVE_PADD
00000102  4EB9 00000282            125      JSR PRINTPA
00000108  6080                     126      BRA MOVE_AMODE
0000010A                           127  MOVE_ADATA
0000010A  4EB9 00000246            128      JSR PRINTDN
00000110  60B6                     129      BRA MOVE_FIN
00000112                           130  MOVE_AIADD
00000112  4EB9 0000025A            131      JSR PRINTIAN
00000118  60AE                     132      BRA MOVE_FIN
0000011A                           133  MOVE_AADDP
0000011A  4EB9 0000026C            134      JSR PRINTAP
00000120  60A6                     135      BRA MOVE_FIN
00000122                           136  MOVE_APADD
00000122  4EB9 00000282            137      JSR PRINTPA
00000128  609E                     138      BRA MOVE_FIN
0000012A                           139  *ABSOLUTE OR IMMEDIATE  
0000012A                           140  MOVE_GETEA  
0000012A  7600                     141      MOVE.L  #0,D3
0000012C  BE7C 0000                142      CMP #0,D7
00000130  6700 0012                143      BEQ MOVE_ABSW
00000134  BE7C 0001                144      CMP #1,D7
00000138  6700 0020                145      BEQ MOVE_ABSL
0000013C  BE7C 0004                146      CMP #4,D7
00000140  6700 0040                147      BEQ MOVE_IMM
00000144                           148  
00000144                           149  
00000144                           150  MOVE_ABSW
00000144  16FC 0024                151                    MOVE.B  #'$',(A3)+
00000148  4EB9 000001BC            152  MOVE_ABSW_LOOP    JSR MOVE_GETBYTE
0000014E  5203                     153                    ADDQ.B    #1,D3
00000150  B63C 0002                154                    CMP.B     #2,D3
00000154  66F2                     155                    BNE   MOVE_ABSW_LOOP
00000156  6000 FF32                156                    BRA MOVE_AMODE
0000015A                           157  MOVE_ABSL
0000015A  16FC 0024                158                    MOVE.B  #'$',(A3)+
0000015E  16FC 0030                159                    MOVE.B    #'0',(A3)+
00000162  16FC 0030                160                    MOVE.B    #'0',(A3)+
00000166  16FC 0030                161                    MOVE.B    #'0',(A3)+
0000016A  16FC 0030                162                    MOVE.B    #'0',(A3)+
0000016E  B859                     163                    CMP.W (A1)+,D4
00000170  4EB9 000001BC            164  MOVE_ABSL_LOOP    JSR MOVE_GETBYTE
00000176  5203                     165                    ADDQ.B    #1,D3
00000178  B63C 0004                166                    CMP.B     #4,D3
0000017C  66F2                     167                    BNE   MOVE_ABSL_LOOP
0000017E  6000 FF0A                168                    BRA MOVE_AMODE
00000182                           169  MOVE_IMM
00000182  16FC 0023                170                    MOVE.B  #'#',(A3)+
00000186  16FC 0024                171                    MOVE.B  #'$',(A3)+
0000018A  343C 3000                172                    MOVE.W    #$3000,D2
0000018E  C441                     173                    AND.W     D1,D2
00000190  B47C 2000                174                    CMP.W     #$2000,D2
00000194  6700 0014                175                    BEQ   MOVE_IMML_LOOP
00000198  4EB9 000001BC            176  MOVE_IMMW_LOOP    JSR MOVE_GETBYTE
0000019E  5203                     177                    ADDQ.B    #1,D3
000001A0  B63C 0002                178                    CMP.B     #2,D3
000001A4  66F2                     179                    BNE   MOVE_IMMW_LOOP
000001A6  6000 FEE2                180                    BRA MOVE_AMODE                  
000001AA  4EB9 000001BC            181  MOVE_IMML_LOOP    JSR MOVE_GETBYTE
000001B0  5203                     182                    ADDQ.B    #1,D3
000001B2  B63C 0004                183                    CMP.B     #4,D3
000001B6  66F2                     184                    BNE   MOVE_IMML_LOOP
000001B8  6000 FED0                185                    BRA MOVE_AMODE
000001BC                           186  MOVE_GETBYTE
000001BC  1A19                     187      MOVE.B  (A1)+,D5
000001BE  1C05                     188      MOVE.B  D5,D6
000001C0  CC3C 00F0                189      AND.B   #$F0,D6
000001C4  E80E                     190      LSR.B   #4,D6
000001C6  4EB9 000001DE            191      JSR MOVE_CONVERT
000001CC  16C6                     192      MOVE.B  D6,(A3)+
000001CE  1C05                     193      MOVE.B  D5,D6
000001D0  CC3C 000F                194      AND.B   #$F,D6
000001D4  4EB9 000001DE            195      JSR MOVE_CONVERT
000001DA  16C6                     196      MOVE.B  D6,(A3)+
000001DC  4E75                     197      RTS
000001DE                           198  MOVE_CONVERT
000001DE  BC3C 000A                199      CMP.B   #10,D6
000001E2  6D00 0008                200      BLT MOVE_DIGIT
000001E6  0606 0037                201      ADD.B   #$37,D6
000001EA  4E75                     202      RTS
000001EC                           203  MOVE_DIGIT
000001EC  0606 0030                204      ADD.B #$30,D6
000001F0  4E75                     205      RTS    
000001F2                           206  
000001F2                           207  
000001F2                           208  
000001F2                           209  MOVE_AGETEA 
000001F2  7600                     210      MOVE.L  #0,D3
000001F4  BE7C 0000                211      CMP #0,D7
000001F8  6700 000A                212      BEQ MOVE_ABSWD
000001FC  BE7C 0001                213      CMP #1,D7
00000200  6700 0016                214      BEQ MOVE_ABSLD   
00000204                           215  MOVE_ABSWD
00000204  16FC 0024                216                    MOVE.B  #'$',(A3)+
00000208  4EB8 01BC                217  MOVE_ABSWD_LOOP    JSR MOVE_GETBYTE
0000020C  5203                     218                    ADDQ.B    #1,D3
0000020E  B63C 0002                219                    CMP.B     #2,D3
00000212  66F4                     220                    BNE   MOVE_ABSWD_LOOP
00000214  6000 FEB2                221                    BRA MOVE_FIN
00000218                           222  MOVE_ABSLD
00000218  16FC 0024                223                    MOVE.B  #'$',(A3)+
0000021C  16FC 0030                224                    MOVE.B    #'0',(A3)+
00000220  16FC 0030                225                    MOVE.B    #'0',(A3)+
00000224  16FC 0030                226                    MOVE.B    #'0',(A3)+
00000228  16FC 0030                227                    MOVE.B    #'0',(A3)+
0000022C  B859                     228                    CMP.W (A1)+,D4
0000022E  4EB8 01BC                229  MOVE_ABSLD_LOOP    JSR MOVE_GETBYTE
00000232  5203                     230                    ADDQ.B    #1,D3
00000234  B63C 0004                231                    CMP.B     #4,D3
00000238  66F4                     232                    BNE   MOVE_ABSLD_LOOP
0000023A  6000 FE8C                233                    BRA MOVE_FIN    
0000023E                           234  PRINTNUM    ;takes value in D7 and prints it to output
0000023E  0607 0030                235          ADD.B   #$30,D7
00000242  16C7                     236          MOVE.B  D7,(A3)+
00000244  4E75                     237          RTS
00000246                           238  PRINTDN     ;takes value in D7 and prints D#
00000246  16FC 0044                239          MOVE.B  #'D',(A3)+
0000024A  4EB8 023E                240          JSR PRINTNUM
0000024E  4E75                     241          RTS
00000250                           242  PRINTAN     ;takes value in D7 and prints A#
00000250  16FC 0041                243          MOVE.B  #'A',(A3)+
00000254  4EB8 023E                244          JSR PRINTNUM
00000258  4E75                     245          RTS
0000025A                           246  PRINTIAN    ;takes value in D7 and prints (A#)
0000025A  16FC 0028                247          MOVE.B  #'(',(A3)+
0000025E  16FC 0041                248          MOVE.B  #'A',(A3)+
00000262  4EB8 023E                249          JSR PRINTNUM
00000266  16FC 0029                250          MOVE.B  #')',(A3)+
0000026A  4E75                     251          RTS
0000026C                           252  PRINTAP    ;takes value in D7 and prints (A#)+
0000026C  16FC 0028                253          MOVE.B  #'(',(A3)+
00000270  16FC 0041                254          MOVE.B  #'A',(A3)+
00000274  4EB8 023E                255          JSR PRINTNUM
00000278  16FC 0029                256          MOVE.B  #')',(A3)+
0000027C  16FC 002B                257          MOVE.B  #'+',(A3)+
00000280  4E75                     258          RTS
00000282                           259  PRINTPA    ;takes value in D7 and prints -(A#)
00000282  16FC 002D                260          MOVE.B  #'-',(A3)+
00000286  16FC 0028                261          MOVE.B  #'(',(A3)+
0000028A  16FC 0041                262          MOVE.B  #'A',(A3)+
0000028E  4EB8 023E                263          JSR PRINTNUM
00000292  16FC 0029                264          MOVE.B  #')',(A3)+
00000296  4E75                     265          RTS                
00000298                           266  *size helpers       
00000298                           267  MOVE_B
00000298  16FC 002E                268          MOVE.B  #'.',(A3)+
0000029C  16FC 0042                269          MOVE.B  #'B',(A3)+
000002A0  16FC 0009                270          MOVE.B  #$09,(A3)+
000002A4  6000 FDA6                271          BRA MOVE_XMODE
000002A8                           272  
000002A8                           273  MOVE_W
000002A8  16FC 002E                274          MOVE.B  #'.',(A3)+
000002AC  16FC 0057                275          MOVE.B  #'W',(A3)+
000002B0  16FC 0009                276          MOVE.B  #$09,(A3)+
000002B4  6000 FD96                277          BRA MOVE_XMODE
000002B8                           278  MOVE_L
000002B8  16FC 002E                279          MOVE.B  #'.',(A3)+
000002BC  16FC 004C                280          MOVE.B  #'L',(A3)+
000002C0  16FC 0009                281          MOVE.B  #$09,(A3)+
000002C4  6000 FD86                282          BRA MOVE_XMODE
000002C8                           283        
000002C8                           284  
000002C8                           285  
000002C8                           286  
000002C8                           287  
000002C8                           288  
000002C8                           289  
Line 290 WARNING: END directive missing, starting address not set

5 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
MOVE_AADDP          11A
MOVE_ABSL           15A
MOVE_ABSLD          218
MOVE_ABSLD_LOOP     22E
MOVE_ABSL_LOOP      170
MOVE_ABSW           144
MOVE_ABSWD          204
MOVE_ABSWD_LOOP     208
MOVE_ABSW_LOOP      148
MOVE_ADATA          10A
MOVE_ADD            EA
MOVE_ADDP           FA
MOVE_AGETEA         1F2
MOVE_AIADD          112
MOVE_AMODE          8A
MOVE_APADD          122
MOVE_B              298
MOVE_CONVERT        1DE
MOVE_COPY           24
MOVE_DATA           E2
MOVE_DIGIT          1EC
MOVE_DONE           2E
MOVE_FIN            C8
MOVE_GETBYTE        1BC
MOVE_GETEA          12A
MOVE_IADD           F2
MOVE_IMM            182
MOVE_IMML_LOOP      1AA
MOVE_IMMW_LOOP      198
MOVE_L              2B8
MOVE_PADD           102
MOVE_SUB            0
MOVE_W              2A8
MOVE_XMODE          4C
PRINTAN             250
PRINTAP             26C
PRINTDN             246
PRINTIAN            25A
PRINTNUM            23E
PRINTPA             282
