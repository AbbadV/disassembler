00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 4/22/2017 1:06:06 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : main.X68
00000000                             3  * Written by : bisrat belayneh
00000000                             4  * Date       : 4/21/2017
00000000                             5  * Description: Displays welcome, Gets start and end address of memo to be decoded ,Define Out-start-addres,
00000000                             6  *               defines valid-flag (1 for code valid 0 for code invalid),defines constants for start and end 
00000000                             7  *               address of the program ,Sets out current add to out -start- add, Starts id running instruction
00000000                             8  *-----------------------------------------------------------
00000000  =0000000D                  9  CR              EQU     $0D                 ASCII code for carriage return
00000000  =0000000A                 10  LF              EQU     $0A                 ASCII code  for line feed  
00000000                            11  
00001000                            12      ORG    $1000
00001000                            13  START:                  ; first instruction of program
00001000                            14  
00001000                            15  * Put program code here
00001000                            16  *----------------------code for output------------------------
00001000  43F9 0000100C             17                  LEA             welcome_msg,A1   load welcome msg to A1
00001006  303C 000E                 18                  Move.W          #14,D0           move 14 to D0   
0000100A  4E4F                      19                  Trap            #15              display the string at A1   
0000100C                            20  
0000100C                            21     
0000100C= 57 65 6C 63 6F 6D ...     22  WELCOME_MSG          dc.b    'Welcome to the Motorola MC68000 Microprocessor Disassembler',CR,LF,0   
0000104A= 50 6C 65 61 73 65 ...     23  START_ADD_MSG        dc.b    'Please enter Start memory address in hexadecimal: ',0
0000107D= 50 6C 65 61 73 65 ...     24  END_ADD_MSG          dc.b    'Please enter End memory address in hexadecimal(must be greater than start address): ',0
000010D2= 49 6E 76 61 6C 69 ...     25  INPUT_FAIL_MSG       dc.b    'Invalid address entered. Please try again.',CR,LF,0
000010FF= 45 6E 64 20 61 64 ...     26  END_ADD_SMALLER_MSG  dc.b    'End address can not be less than starting address',CR,LF,0
00001133= 41 64 64 72 65 73 ...     27  ADD_TOO_SMALL        dc.b    'Address below minimum. enter address greater than or equal to $7000',CR,LF,0
00001179= 41 64 64 72 65 73 ...     28  ADD_TOO_BIG          dc.b    'Address above maximum. enter address less than or equal to $FFFFFFFE',CR,LF,0
000011C0                            29  IN_START_ADD         ds.b    80        stores program starting memory address 
00001210                            30  IN_CURRENT_ADD       ds.b    80        stores current memory address
00001260                            31  IN_END_ADD           ds.b    80        stores program ending memory address 
000012B0                            32  
000012B0                            33  
000012B0  FFFF FFFF                 34      SIMHALT             ; halt simulator
000012B4                            35  
000012B4                            36  * Put variables and constants here
000012B4                            37      INCLUDE     'OPCODE_TEST.X68'
00007000                            38      ORG    $7000
00007000                            39  
00007000                            40  
00007000  4E71                      41      NOP
00007002                            42  
00007002  1200                      43      MOVE.B D0, D1
00007004                            44  
00007004                            45  -------------------- end include --------------------
00007004                            46  
00007004                            47      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD_TOO_BIG         1179
ADD_TOO_SMALL       1133
CR                  D
END_ADD_MSG         107D
END_ADD_SMALLER_MSG  10FF
INPUT_FAIL_MSG      10D2
IN_CURRENT_ADD      1210
IN_END_ADD          1260
IN_START_ADD        11C0
LF                  A
START               1000
START_ADD_MSG       104A
WELCOME_MSG         100C
